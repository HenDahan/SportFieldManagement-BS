pipeline {
    agent{
        docker {
            image 'windsekirun/jenkins-android-docker:1.1.1'
        }
    }
    options {
        skipStagesAfterUnstable()
    }
    stages{
        stage('Measurment - Verifing git repository exists') {
            steps{
                echo "verifing git repository"
                dir('subDir'){
                    checkout scm
                }
                script{ 
                    def exist1 = fileExists 'build.gradle'
                    if (exist1){
                        echo "yes"
                        echo "the pwd is: ${PWD}"
                        echo "the working space is: ${WORKSPACE}"

                    }
                    else{
                        echo "no"
                        echo "the pwd is: ${PWD}"
                        echo "the working space is: ${WORKSPACE}"

                    }
                    
                    def exist = fileExists '/var/jenkins_home/workspace/Team_12/Git_pipeline_Team-12'
                    if (exist){
                        echo "the file exist."                        
                        echo "the working space is: ${WORKSPACE}"
                    }
                    else{
                        echo "the file does not exist."
                        echo "the working space is: ${WORKSPACE}"
                    }
                }
            }
        }
        
        stage("Pre build") {
            steps{
                echo "starting pre build stage"
                sh "chmod +x ./gradlew"
                echo "grant permission gradle."
            }
        }
        
        stage('Compiling') {
            steps {
                echo "starting pre build stage."
                sh './gradlew compileDebugSources'
                echo "compiling succeed."
            }
        }
        
        stage('Unit test') {
            steps {
                echo "starting the unit tests stage."
                sh './gradlew testDebugUnitTest testDebugUnitTest' 
                echo "unitTesting succeed."
            }
        }

        stage('Finished'){
            steps {
                echo "Jenkins tests on the Git project finished running succesfully!"
            }
        }

        stage('Measurment - Email notification') {
           steps{
               echo "email notification stage."
            }
            post {
                success {
                    echo "sending mail with a successful notification."
                    //mail to: "kfir.rn@gmail.com", subject: "Build ", body: "Build ${env.BUILD_NUMBER} successfully worked; ${env.BUILD_URL}"
                    //mail to: "shirbar1066@gmail.com", subject: "Build ", body: "Build ${env.BUILD_NUMBER} successfully worked; ${env.BUILD_URL}"
                    //mail to: "hendahan110@gmail.com", subject: "Build ", body: "Build ${env.BUILD_NUMBER} successfully worked; ${env.BUILD_URL}"
                    //mail to: "barpg2802@gmail.com", subject: "Build ", body: "Build ${env.BUILD_NUMBER} successfully worked; ${env.BUILD_URL}"
                }
            }
        }
    }
    
    post {
        failure {
            echo "sending mail with a failure notification."
            //mail to: "kfir.rn@gmail.com", subject: "Build ", body: "Build ${env.BUILD_NUMBER} failed; ${env.BUILD_URL}"
            //mail to: "shirbar1066@gmail.com", subject: "Build ", body: "Build ${env.BUILD_NUMBER} failed; ${env.BUILD_URL}"
            //mail to: "hendahan110@gmail.com", subject: "Build ", body: "Build ${env.BUILD_NUMBER} failed; ${env.BUILD_URL}"
            //mail to: "barpg2802@gmail.com", subject: "Build ", body: "Build ${env.BUILD_NUMBER} failed; ${env.BUILD_URL}"            
        }
    }
}

