pipeline {
    agent{
        docker {
            image 'windsekirun/jenkins-android-docker:1.1.1'
        }
    }
    options {
        skipStagesAfterUnstable()
    }
    stages{
        stage('Measurment - Verifing existence of gradle files inside git and Jenkins files') {
            steps{
                echo "verifing git repository"
                dir('subDir'){
                    checkout scm
                    script{
                        def buildGradeCheck = fileExists 'build.gradle'
                        def gradlewCheck = fileExists 'gradlew'
                        def gradlewBatCheck = fileExists 'gradlew.bat'
                        def settingsGradleCheck = fileExists 'settings.gradle'
                        def gradlePropertiesCheck = fileExists 'gradle.properties'
                        
                        if (buildGradeCheck && gradlewCheck && gradlewBatCheck && settingsGradleCheck && gradlePropertiesCheck){
                            echo "success - all of the gradle files exist."
                        }
                        else{
                            echo "error - some of the gradle files are missing."
                        }   
                    }
                }
                script{ 
                    echo "verifing jenkins files"
                    def exist = fileExists '/var/jenkins_home/workspace/Team_12/Git_pipeline_Team-12'
                    if (exist){
                        echo "the file exist."                        
                        echo "the working space is: ${WORKSPACE}"
                    }
                    else{
                        echo "the file does not exist."
                        echo "the working space is: ${WORKSPACE}"
                    }
                }
            }
        }
        
        stage("Pre build") {
            steps{
                echo "starting pre build stage"
                sh "chmod +x ./gradlew"
                echo "grant permission gradle."
            }
        }
        
        stage('Compiling') {
            steps {
                echo "starting pre build stage."
                sh './gradlew compileDebugSources'
                echo "compiling succeed."
            }
        }
        
        stage('Unit test') {
            steps {
                echo "starting the unit tests stage."
                sh './gradlew testDebugUnitTest testDebugUnitTest' 
                echo "unitTesting succeed."
            }
        }

        stage('Finished'){
            steps {
                echo "Jenkins tests on the Git project finished running succesfully!"
            }
        }

        stage('Measurment - Email notification') {
           steps{
               echo "email notification stage."
            }
            post {
                success {
                    echo "sending mail with a successful notification."
                    mail to: "kfir.rn@gmail.com", subject: "Build ", body: "Build ${env.BUILD_NUMBER} successfully worked; ${env.BUILD_URL}"
                    mail to: "shirbar1066@gmail.com", subject: "Build ", body: "Build ${env.BUILD_NUMBER} successfully worked; ${env.BUILD_URL}"
                    mail to: "hendahan110@gmail.com", subject: "Build ", body: "Build ${env.BUILD_NUMBER} successfully worked; ${env.BUILD_URL}"
                    mail to: "barpg2802@gmail.com", subject: "Build ", body: "Build ${env.BUILD_NUMBER} successfully worked; ${env.BUILD_URL}"
                }
                 failure {
                    echo "sending mail with a failure notification."
                    mail to: "kfir.rn@gmail.com", subject: "Build ", body: "Build ${env.BUILD_NUMBER} failed; ${env.BUILD_URL}"
                    mail to: "shirbar1066@gmail.com", subject: "Build ", body: "Build ${env.BUILD_NUMBER} failed; ${env.BUILD_URL}"
                    mail to: "hendahan110@gmail.com", subject: "Build ", body: "Build ${env.BUILD_NUMBER} failed; ${env.BUILD_URL}"
                    mail to: "barpg2802@gmail.com", subject: "Build ", body: "Build ${env.BUILD_NUMBER} failed; ${env.BUILD_URL}"            
                }
                always{
                  sh 'cp -r app/build/test-results $WORKSPACE/test-results'
                  junit(keepLongStdio: true, testResults: '**/test-results/**/**.xml')
                }
            }
        }
    }
}

